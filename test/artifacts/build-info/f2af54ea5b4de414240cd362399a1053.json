{
	"id": "f2af54ea5b4de414240cd362399a1053",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"test/Round_1_test.sol": {
				"content": "pragma solidity ^0.8.0;\n\n//import \"truffle/Assert.sol\";\n//import \"../contracts/NeverShare.sol\";\n\ncontract testSuite {\n\n    // create addresses that we're gonna test making bids with\n\n\n    // ensure initialisation satisfies specification requirements\n    function testSetup() public {\n\n        \n\n    }\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"test/Round_1_test.sol": {
				"testSuite": {
					"abi": [
						{
							"inputs": [],
							"name": "testSetup",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"test/Round_1_test.sol\":97:303  contract testSuite {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"test/Round_1_test.sol\":97:303  contract testSuite {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xbca86986\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"test/Round_1_test.sol\":254:300  function testSetup() public {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220564f3e8f71b9b5ebed2f6625de33327b402f344ed6be2cbfc6f2ec8e95acd3c164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50606d80601d6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063bca8698614602d575b600080fd5b60336035565b005b56fea2646970667358221220564f3e8f71b9b5ebed2f6625de33327b402f344ed6be2cbfc6f2ec8e95acd3c164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6D DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBCA86986 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x35 JUMP JUMPDEST STOP JUMPDEST JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP 0x4F RETURNDATACOPY DUP16 PUSH18 0xB9B5EBED2F6625DE33327B402F344ED6BE2C 0xBF 0xC6 CALLCODE 0xEC DUP15 SWAP6 0xAC 0xD3 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "97:206:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@testSetup_5": {
									"entryPoint": 53,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c8063bca8698614602d575b600080fd5b60336035565b005b56fea2646970667358221220564f3e8f71b9b5ebed2f6625de33327b402f344ed6be2cbfc6f2ec8e95acd3c164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBCA86986 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x35 JUMP JUMPDEST STOP JUMPDEST JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP 0x4F RETURNDATACOPY DUP16 PUSH18 0xB9B5EBED2F6625DE33327B402F344ED6BE2C 0xBF 0xC6 CALLCODE 0xEC DUP15 SWAP6 0xAC 0xD3 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "97:206:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;254:46;;;:::i;:::-;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "21800",
								"executionCost": "75",
								"totalCost": "21875"
							},
							"external": {
								"testSetup()": "122"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 97,
									"end": 303,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 97,
									"end": 303,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 97,
									"end": 303,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 97,
									"end": 303,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 97,
									"end": 303,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 97,
									"end": 303,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 97,
									"end": 303,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 97,
									"end": 303,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 97,
									"end": 303,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 97,
									"end": 303,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 97,
									"end": 303,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 97,
									"end": 303,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 97,
									"end": 303,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 97,
									"end": 303,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 97,
									"end": 303,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 97,
									"end": 303,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 97,
									"end": 303,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 97,
									"end": 303,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 97,
									"end": 303,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 97,
									"end": 303,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 97,
									"end": 303,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220564f3e8f71b9b5ebed2f6625de33327b402f344ed6be2cbfc6f2ec8e95acd3c164736f6c63430008070033",
									".code": [
										{
											"begin": 97,
											"end": 303,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 97,
											"end": 303,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 97,
											"end": 303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 97,
											"end": 303,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 97,
											"end": 303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 97,
											"end": 303,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 97,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 97,
											"end": 303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 97,
											"end": 303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 97,
											"end": 303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 97,
											"end": 303,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 97,
											"end": 303,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 97,
											"end": 303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 97,
											"end": 303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 97,
											"end": 303,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 97,
											"end": 303,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 97,
											"end": 303,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 97,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 97,
											"end": 303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 97,
											"end": 303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 97,
											"end": 303,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 97,
											"end": 303,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 97,
											"end": 303,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 97,
											"end": 303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 97,
											"end": 303,
											"name": "PUSH",
											"source": 0,
											"value": "BCA86986"
										},
										{
											"begin": 97,
											"end": 303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 97,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 97,
											"end": 303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 97,
											"end": 303,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 97,
											"end": 303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 97,
											"end": 303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 97,
											"end": 303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 97,
											"end": 303,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 254,
											"end": 300,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 254,
											"end": 300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 254,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 254,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 254,
											"end": 300,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 254,
											"end": 300,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 254,
											"end": 300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 254,
											"end": 300,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 254,
											"end": 300,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 254,
											"end": 300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 254,
											"end": 300,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"testSetup()": "bca86986"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"testSetup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Round_1_test.sol\":\"testSuite\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"test/Round_1_test.sol\":{\"keccak256\":\"0x0c1699372c71e04edc6c14dd4fa6df41b8ad6c8c048e6e612f8c41e1e8782c3c\",\"urls\":[\"bzz-raw://7c5dc600b629fb6e3bbcec0cf3f583b689030e790883637bb0550c5c4523e6a1\",\"dweb:/ipfs/QmeSW4cQpwGQaaaFVJYtgXbRmGXzUTRqqo5e31ZcnafKD3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> test/Round_1_test.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "test/Round_1_test.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"test/Round_1_test.sol": {
				"ast": {
					"absolutePath": "test/Round_1_test.sol",
					"exportedSymbols": {
						"testSuite": [
							6
						]
					},
					"id": 7,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 6,
							"linearizedBaseContracts": [
								6
							],
							"name": "testSuite",
							"nameLocation": "106:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 4,
										"nodeType": "Block",
										"src": "282:18:0",
										"statements": []
									},
									"functionSelector": "bca86986",
									"id": 5,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "testSetup",
									"nameLocation": "263:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "272:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "282:0:0"
									},
									"scope": 6,
									"src": "254:46:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 7,
							"src": "97:206:0",
							"usedErrors": []
						}
					],
					"src": "0:303:0"
				},
				"id": 0
			}
		}
	}
}